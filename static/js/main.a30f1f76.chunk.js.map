{"version":3,"sources":["components/Home/Home.module.scss","components/common/PageLayout/PageLayout.module.scss","components/authentification/SignUp/SignUp.module.scss","components/authentification/SignIn/SignIn.module.scss","components/common/SideBar/SideBar.module.scss","components/DamageValueCalculator/DamageValueCalculatorUsage/DamageValueCalculatorUsage.module.scss","util/firebase.ts","components/Home/Home.tsx","app/characterSlice.ts","util/damageValue.ts","app/artifactsSlice.ts","components/DamageValueCalculator/CharacterForm/CharacterForm.tsx","components/DamageValueCalculator/DamageValueCalculatorUsage/DamageValueCalculatorUsage.tsx","components/DamageValueCalculator/ArtifactForm/ArtifactForm.tsx","components/DamageValueCalculator/DamageValueCalculator.tsx","app/hooks.ts","components/authentification/SignUp/SignUp.tsx","components/authentification/SignIn/SignIn.tsx","app/authSlice.ts","app/myCharactersSlice.ts","components/MyCharacters/MyCharacter/MyCharacter.tsx","components/MyCharacters/MyCharacters.tsx","components/common/SideBar/SideBar.tsx","components/common/Header/Header.tsx","components/common/PageLayout/PageLayout.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","components/DamageValueCalculator/ArtifactForm/ArtifactForm.module.scss","components/DamageValueCalculator/CharacterForm/CharacterForm.module.scss","components/MyCharacters/MyCharacters.module.scss","components/DamageValueCalculator/DamageValueCalculator.module.scss","components/common/Header/Header.module.scss"],"names":["module","exports","firebaseInstance","Home","Title","className","styles","title","title__text","Paragraph","paragraph","characterSlice","createSlice","name","initialState","baseAttack","bonusAttack","critRate","critDamage","elementalBonus","physicalBonus","elementalDamageProportion","reducers","setCharacterBaseAttack","state","action","payload","setCharacterBonusAttack","setCharacterCritRate","setCharacterCritDamage","setCharacterElementalBonus","setCharacterPhysicalBonus","setCharacterElementalDamageProportion","actions","calculateDV","character","artifact","calculateRawAttackDV","rawAttack","calculateAttackPercentageDV","attackPercentage","calculateCritDV","calculateDamageTypeBonusDV","characterBaseAttack","characterBonusAttack","artifactRawAttack","artifactAttackPercentage","characterCritRate","characterCritDamage","artifactCritRate","artifactCritDamage","characterElementalBonus","artifactElementalBonus","characterElementalDamageProportion","items","damageValue","artifactsSlice","setDamageValue","id","addArtifact","push","deleteArtifact","splice","resetArtifacts","setArtifactRawAttack","setArtifactAttackPercentage","setArtifactCritRate","setArtifactCritDamage","setArtifactElementalBonus","setArtifactPhysicalBonus","CharacterForm","dispatch","useDispatch","artifacts","useSelector","useEffect","console","log","i","length","form","layout","form__title","level","Item","type","prefix","field__prefix","placeholder","value","onChange","e","currentTarget","min","label","marks","React","memo","DamageValueCalculatorUsage","useState","currentStep","setCurrentStep","steps","current","step","direction","Step","description","ArtifactForm","form__header","close","danger","onClick","CloseOutlined","toFixed","DamageValueCalculator","renderedArtifacts","forms","control","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirebase","window","firebase","initializeApp","signOut","a","auth","alert","message","signIn","email","password","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","useAuth","initialValue","currentUser","setCurrentUser","onAuthStateChanged","authUser","SignUp","to","onFinish","values","rules","required","UserOutlined","LockOutlined","button","htmlType","SignIn","props","authSlice","user","setUser","selectCurrentUser","myCharactersSlice","addMyCharacter","deleteMyCharacter","filter","changeMyCharacterName","changeMyCharacterLevel","selectMyCharacters","myCharacters","MyCharacter","myCharacter","style","width","defaultValue","Grid","talents","normalAttack","elementalSkill","elementalBurst","weapon","rarity","MyCharacters","characters","characters__button","newCharacter","stats","main","sub","flower","set","plume","sands","goblet","circlet","constellation","charactersList","map","text","SideBar","Sider","theme","logo","logo__text","defaultSelectedKeys","CaretRightOutlined","link","Header","header","account","buttons","PageLayout","children","pages","page","Content","content","App","path","component","exact","store","configureStore","reducer","characterReducer","artifactsReducer","authReducer","myCharactersReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a30f1f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__154KV\",\"content\":\"Home_content__X6WSx\",\"title\":\"Home_title__3MnUa\",\"title__text\":\"Home_title__text__3hRt7\",\"paragraph\":\"Home_paragraph__3MfW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"PageLayout_page__wwTwy\",\"content\":\"PageLayout_content__7Z1zn\",\"main\":\"PageLayout_main__Tlcqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SignUp_content__1kd5Q\",\"main\":\"SignUp_main__3PLXE\",\"title\":\"SignUp_title__xQARc\",\"button\":\"SignUp_button__1z7u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SignIn_content__2kkc0\",\"main\":\"SignIn_main__1pfyI\",\"title\":\"SignIn_title__27TM8\",\"button\":\"SignIn_button__3skBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"SideBar_logo__3ORr9\",\"logo__text\":\"SideBar_logo__text__3rjJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steps\":\"DamageValueCalculatorUsage_steps__29-pc\"};","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nlet firebaseInstance: firebase.app.App | null;\r\n\r\nexport function getFirebase() {\r\n    if (typeof window !== 'undefined') {\r\n        if (firebaseInstance) return firebaseInstance;\r\n        firebaseInstance = firebase.initializeApp(firebaseConfig);\r\n        return firebaseInstance;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\ngetFirebase();\r\n\r\nexport const signOut = async () => {\r\n    try {\r\n        if (firebaseInstance) {\r\n            await firebaseInstance.auth().signOut();\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n};\r\n\r\nexport const signIn = async (email: string, password: string) => {\r\n    try {\r\n        if (firebaseInstance) {\r\n            await firebaseInstance.auth().signInWithEmailAndPassword(email, password);\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n};\r\n\r\nexport const signUp = async (email: string, password: string) => {\r\n    try {\r\n        if (firebaseInstance) {\r\n            await firebaseInstance.auth().createUserWithEmailAndPassword(email, password);\r\n        }\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n};\r\n","import { Layout, Typography } from 'antd';\r\nimport { Header } from '../common/Header/Header';\r\nimport styles from './Home.module.scss';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            <Typography.Title className={styles.title}>\r\n                <span className={styles.title__text}>Minna Genshin</span>\r\n            </Typography.Title>\r\n            <Typography.Paragraph className={styles.paragraph}>\r\n                This web app is a collection of tools for calculating staff for Genshin Impact\r\n            </Typography.Paragraph>\r\n        </div>\r\n    );\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\nconst initialState = {\r\n  baseAttack: 800,\r\n  bonusAttack: 0,\r\n  critRate: 5,\r\n  critDamage: 50,\r\n  elementalBonus: 0,\r\n  physicalBonus: 0,\r\n  elementalDamageProportion: 50,\r\n};\r\n\r\nexport type CharacterState = typeof initialState;\r\n\r\nexport const characterSlice = createSlice({\r\n  name: \"character\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setCharacterBaseAttack: (state, action: PayloadAction<number>) => {\r\n      state.baseAttack = action.payload;\r\n    },\r\n    setCharacterBonusAttack: (state, action: PayloadAction<number>) => {\r\n      state.bonusAttack = action.payload;\r\n    },\r\n    setCharacterCritRate: (state, action: PayloadAction<number>) => {\r\n      state.critRate = action.payload;\r\n    },\r\n    setCharacterCritDamage: (state, action: PayloadAction<number>) => {\r\n      state.critDamage = action.payload;\r\n    },\r\n    setCharacterElementalBonus: (state, action: PayloadAction<number>) => {\r\n      state.elementalBonus = action.payload;\r\n    },\r\n    setCharacterPhysicalBonus: (state, action: PayloadAction<number>) => {\r\n      state.physicalBonus = action.payload;\r\n    },\r\n    setCharacterElementalDamageProportion: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.elementalDamageProportion = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCharacterBaseAttack,\r\n  setCharacterBonusAttack,\r\n  setCharacterCritRate,\r\n  setCharacterCritDamage,\r\n  setCharacterElementalBonus,\r\n  setCharacterPhysicalBonus,\r\n  setCharacterElementalDamageProportion,\r\n} = characterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCharacterBaseAttack = (state: RootState): number =>\r\n  state.character.baseAttack;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport default characterSlice.reducer;\r\n","type Character = {\r\n    baseAttack: number;\r\n    bonusAttack: number;\r\n    critRate: number;\r\n    critDamage: number;\r\n    elementalBonus: number;\r\n    physicalBonus: number;\r\n    elementalDamageProportion: number;\r\n};\r\n\r\ntype Artifact = {\r\n    rawAttack: number;\r\n    attackPercentage: number;\r\n    critRate: number;\r\n    critDamage: number;\r\n    elementalBonus: number;\r\n    physicalBonus: number;\r\n};\r\n\r\nexport const calculateDV = (character: Character, artifact: Artifact) => {\r\n    const rawAttackDV = calculateRawAttackDV(\r\n        character.baseAttack,\r\n        character.bonusAttack,\r\n        artifact.rawAttack\r\n    );\r\n    const attackPercentageDV = calculateAttackPercentageDV(\r\n        character.baseAttack,\r\n        character.bonusAttack,\r\n        artifact.attackPercentage\r\n    );\r\n    const critDV = calculateCritDV(\r\n        character.critRate,\r\n        character.critDamage,\r\n        artifact.critRate,\r\n        artifact.critDamage\r\n    );\r\n\r\n    const elementalBonusDV = calculateDamageTypeBonusDV(\r\n        character.elementalBonus,\r\n        artifact.elementalBonus,\r\n        character.elementalDamageProportion\r\n    );\r\n    const physicalBonusDV = calculateDamageTypeBonusDV(\r\n        character.physicalBonus,\r\n        artifact.physicalBonus,\r\n        100 - character.elementalDamageProportion\r\n    );\r\n\r\n    return rawAttackDV + attackPercentageDV + critDV + elementalBonusDV + physicalBonusDV;\r\n};\r\n\r\nconst calculateRawAttackDV = (\r\n    characterBaseAttack: number,\r\n    characterBonusAttack: number,\r\n    artifactRawAttack: number\r\n) => {\r\n    return artifactRawAttack / (characterBaseAttack + characterBonusAttack);\r\n};\r\n\r\nconst calculateAttackPercentageDV = (\r\n    characterBaseAttack: number,\r\n    characterBonusAttack: number,\r\n    artifactAttackPercentage: number\r\n) => {\r\n    return (\r\n        (characterBaseAttack * (artifactAttackPercentage / 100)) /\r\n        (characterBaseAttack + characterBonusAttack)\r\n    );\r\n};\r\n\r\nconst calculateCritDV = (\r\n    characterCritRate: number,\r\n    characterCritDamage: number,\r\n    artifactCritRate: number,\r\n    artifactCritDamage: number\r\n) => {\r\n    if (characterCritRate + artifactCritRate > 100) {\r\n        artifactCritRate = 100 - characterCritRate;\r\n    }\r\n    return (\r\n        ((characterCritRate * characterCritDamage) / 10000 +\r\n            (characterCritRate * artifactCritDamage) / 10000 +\r\n            (characterCritDamage * artifactCritRate) / 10000 +\r\n            (artifactCritRate * artifactCritDamage) / 10000 +\r\n            1) /\r\n            ((characterCritRate * characterCritDamage) / 10000 + 1) -\r\n        1\r\n    );\r\n};\r\n\r\nconst calculateDamageTypeBonusDV = (\r\n    characterElementalBonus: number,\r\n    artifactElementalBonus: number,\r\n    characterElementalDamageProportion: number\r\n) => {\r\n    if (characterElementalBonus === 0) {\r\n        return ((artifactElementalBonus / 100) * characterElementalDamageProportion) / 100;\r\n    }\r\n    return (\r\n        ((characterElementalBonus / 100 + artifactElementalBonus / 100) /\r\n            (characterElementalBonus / 100)) *\r\n        (characterElementalDamageProportion / 100)\r\n    );\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ntype Artifact = {\r\n  rawAttack: number;\r\n  attackPercentage: number;\r\n  critRate: number;\r\n  critDamage: number;\r\n  elementalBonus: number;\r\n  physicalBonus: number;\r\n  damageValue: number;\r\n};\r\n\r\ninterface ArtifactsState {\r\n  items: Array<Artifact>;\r\n}\r\n\r\nconst initialState: ArtifactsState = {\r\n  items: [\r\n    {\r\n      rawAttack: 0,\r\n      attackPercentage: 0,\r\n      critRate: 0,\r\n      critDamage: 0,\r\n      elementalBonus: 0,\r\n      physicalBonus: 0,\r\n      damageValue: 0,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const artifactsSlice = createSlice({\r\n  name: \"artifacts\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setDamageValue: (\r\n      state,\r\n      action: PayloadAction<{ id: number; damageValue: number }>\r\n    ) => {\r\n      state.items[action.payload.id].damageValue = action.payload.damageValue;\r\n    },\r\n    addArtifact: (state) => {\r\n      state.items.push({ ...initialState.items[0] });\r\n    },\r\n    deleteArtifact: (state, action: PayloadAction<number>) => {\r\n      state.items.splice(action.payload, 1);\r\n    },\r\n    resetArtifacts: (state) => {\r\n      state.items = initialState.items;\r\n    },\r\n    setArtifactRawAttack: (\r\n      state,\r\n      action: PayloadAction<{ id: number; rawAttack: number }>\r\n    ) => {\r\n      state.items[action.payload.id].rawAttack = action.payload.rawAttack;\r\n    },\r\n    setArtifactAttackPercentage: (\r\n      state,\r\n      action: PayloadAction<{ id: number; attackPercentage: number }>\r\n    ) => {\r\n      state.items[action.payload.id].attackPercentage =\r\n        action.payload.attackPercentage;\r\n    },\r\n    setArtifactCritRate: (\r\n      state,\r\n      action: PayloadAction<{ id: number; critRate: number }>\r\n    ) => {\r\n      state.items[action.payload.id].critRate = action.payload.critRate;\r\n    },\r\n    setArtifactCritDamage: (\r\n      state,\r\n      action: PayloadAction<{ id: number; critDamage: number }>\r\n    ) => {\r\n      state.items[action.payload.id].critDamage = action.payload.critDamage;\r\n    },\r\n    setArtifactElementalBonus: (\r\n      state,\r\n      action: PayloadAction<{ id: number; elementalBonus: number }>\r\n    ) => {\r\n      state.items[action.payload.id].elementalBonus =\r\n        action.payload.elementalBonus;\r\n    },\r\n    setArtifactPhysicalBonus: (\r\n      state,\r\n      action: PayloadAction<{ id: number; physicalBonus: number }>\r\n    ) => {\r\n      state.items[action.payload.id].physicalBonus =\r\n        action.payload.physicalBonus;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setDamageValue,\r\n  addArtifact,\r\n  deleteArtifact,\r\n  resetArtifacts,\r\n  setArtifactRawAttack,\r\n  setArtifactAttackPercentage,\r\n  setArtifactCritRate,\r\n  setArtifactCritDamage,\r\n  setArtifactElementalBonus,\r\n  setArtifactPhysicalBonus,\r\n} = artifactsSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectArtifactBaseAttack = (state: RootState): number =>\r\n//   state.Artifact.baseAttack;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport default artifactsSlice.reducer;\r\n","import styles from './CharacterForm.module.scss';\r\nimport { Form, Input, Slider, Typography } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../app/store';\r\nimport {\r\n    setCharacterBaseAttack,\r\n    setCharacterBonusAttack,\r\n    setCharacterCritDamage,\r\n    setCharacterCritRate,\r\n    setCharacterElementalBonus,\r\n    setCharacterElementalDamageProportion,\r\n    setCharacterPhysicalBonus,\r\n} from '../../../app/characterSlice';\r\nimport { calculateDV } from '../../../util/damageValue';\r\nimport { setDamageValue } from '../../../app/artifactsSlice';\r\n\r\nconst CharacterForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const artifacts = useSelector((state: RootState) => state.artifacts.items);\r\n\r\n    const character = useSelector((state: RootState) => state.character);\r\n\r\n    const {\r\n        baseAttack,\r\n        bonusAttack,\r\n        critRate,\r\n        critDamage,\r\n        elementalBonus,\r\n        physicalBonus,\r\n        elementalDamageProportion,\r\n    } = character;\r\n\r\n    useEffect(() => {\r\n        console.log('Effect');\r\n        for (let i: number = 0; i < artifacts.length; i++) {\r\n            dispatch(\r\n                setDamageValue({\r\n                    id: i,\r\n                    damageValue: calculateDV(character, artifacts[i]),\r\n                })\r\n            );\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [character]);\r\n\r\n    const handleBaseAttackChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCharacterBaseAttack(+e.currentTarget.value));\r\n    };\r\n\r\n    const handleBonusAttackChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCharacterBonusAttack(+e.currentTarget.value));\r\n    };\r\n\r\n    const handleCritRateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCharacterCritRate(+e.currentTarget.value));\r\n    };\r\n\r\n    const handleCritDamageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCharacterCritDamage(+e.currentTarget.value));\r\n    };\r\n\r\n    const handleElementalBonusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCharacterElementalBonus(+e.currentTarget.value));\r\n    };\r\n\r\n    const handlePhysicalBonusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setCharacterPhysicalBonus(+e.currentTarget.value));\r\n    };\r\n\r\n    const handleElementalDamageProportionChange = (value: number) => {\r\n        dispatch(setCharacterElementalDamageProportion(value));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.character}>\r\n            <Form className={styles.form} layout={'vertical'}>\r\n                <Typography.Title className={styles.form__title} level={2}>\r\n                    Character\r\n                </Typography.Title>\r\n                <Form.Item>\r\n                    <Input\r\n                        type=\"number\"\r\n                        prefix={<div className={styles.field__prefix}>Base Attack</div>}\r\n                        placeholder=\"Character's Base Attack\"\r\n                        value={baseAttack}\r\n                        onChange={handleBaseAttackChange}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        type=\"number\"\r\n                        prefix={<div className={styles.field__prefix}>Bonus Attack</div>}\r\n                        placeholder=\"Character's Bonus Attack\"\r\n                        value={bonusAttack}\r\n                        onChange={handleBonusAttackChange}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        type=\"number\"\r\n                        prefix={<div className={styles.field__prefix}>Crit Rate</div>}\r\n                        placeholder=\"Character's Crit Rate\"\r\n                        min={5}\r\n                        value={critRate}\r\n                        onChange={handleCritRateChange}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        type=\"number\"\r\n                        prefix={<div className={styles.field__prefix}>Crit Damage</div>}\r\n                        placeholder=\"Character's Crit Damage\"\r\n                        min={50}\r\n                        value={critDamage}\r\n                        onChange={handleCritDamageChange}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        type=\"number\"\r\n                        prefix={<div className={styles.field__prefix}>Elemental Bonus</div>}\r\n                        placeholder=\"Character's Elemental Bonus\"\r\n                        value={elementalBonus}\r\n                        onChange={handleElementalBonusChange}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        type=\"number\"\r\n                        prefix={<div className={styles.field__prefix}>Physical Bonus</div>}\r\n                        placeholder=\"Character's Physical Bonus\"\r\n                        value={physicalBonus}\r\n                        onChange={handlePhysicalBonusChange}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item label=\"Elemental Damage Proportion (%)\">\r\n                    <Slider\r\n                        marks={{\r\n                            0: 'Physical',\r\n                            25: '25%',\r\n                            50: '50%',\r\n                            75: '75%',\r\n                            100: 'Elemental',\r\n                        }}\r\n                        value={elementalDamageProportion}\r\n                        onChange={handleElementalDamageProportionChange}\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(CharacterForm);\r\n","import styles from './DamageValueCalculatorUsage.module.scss';\r\nimport { Steps } from 'antd';\r\nimport { useState } from 'react';\r\n\r\nexport const DamageValueCalculatorUsage = () => {\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n\r\n    return (\r\n        <div className={styles.steps}>\r\n            <Steps\r\n                current={currentStep}\r\n                onChange={(step: number) => setCurrentStep(step)}\r\n                direction=\"vertical\"\r\n            >\r\n                <Steps.Step\r\n                    title=\"Step 1\"\r\n                    description=\"Unequip artifact from it's slot to compare it with another artifact\"\r\n                />\r\n                <Steps.Step\r\n                    title=\"Step 2\"\r\n                    description=\"Input your character's stats in Character form\"\r\n                />\r\n                <Steps.Step\r\n                    title=\"Step 3\"\r\n                    description=\"Input artifacts' stats in Artifacts' forms\"\r\n                />\r\n            </Steps>\r\n        </div>\r\n    );\r\n};\r\n","import styles from \"./ArtifactForm.module.scss\";\r\nimport { Button, Form, Input, Statistic, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport {\r\n  deleteArtifact,\r\n  setArtifactAttackPercentage,\r\n  setArtifactCritDamage,\r\n  setArtifactCritRate,\r\n  setArtifactElementalBonus,\r\n  setArtifactPhysicalBonus,\r\n  setArtifactRawAttack,\r\n  setDamageValue,\r\n} from \"../../../app/artifactsSlice\";\r\nimport { calculateDV } from \"../../../util/damageValue\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\ninterface Props {\r\n  id: number;\r\n}\r\n\r\nconst ArtifactForm = ({ id }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const character = useSelector((state: RootState) => state.character);\r\n\r\n  const rawAttack = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].rawAttack\r\n  );\r\n  const attackPercentage = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].attackPercentage\r\n  );\r\n  const critRate = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].critRate\r\n  );\r\n  const critDamage = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].critDamage\r\n  );\r\n  const elementalBonus = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].elementalBonus\r\n  );\r\n  const physicalBonus = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].physicalBonus\r\n  );\r\n  const damageValue = useSelector(\r\n    (state: RootState) => state.artifacts.items[id].damageValue\r\n  );\r\n\r\n  const handleDeleteButtonClick = () => {\r\n    dispatch(deleteArtifact(id));\r\n  };\r\n\r\n  const handleRawAttackChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setArtifactRawAttack({ id, rawAttack: +e.currentTarget.value }));\r\n    dispatch(\r\n      setDamageValue({\r\n        id,\r\n        damageValue: calculateDV(character, {\r\n          rawAttack: +e.currentTarget.value,\r\n          attackPercentage,\r\n          critRate,\r\n          critDamage,\r\n          elementalBonus,\r\n          physicalBonus,\r\n        }),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAttackPercentageChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatch(\r\n      setArtifactAttackPercentage({\r\n        id,\r\n        attackPercentage: +e.currentTarget.value,\r\n      })\r\n    );\r\n    dispatch(\r\n      setDamageValue({\r\n        id,\r\n        damageValue: calculateDV(character, {\r\n          rawAttack,\r\n          attackPercentage: +e.currentTarget.value,\r\n          critRate,\r\n          critDamage,\r\n          elementalBonus,\r\n          physicalBonus,\r\n        }),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCritRateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setArtifactCritRate({ id, critRate: +e.currentTarget.value }));\r\n    dispatch(\r\n      setDamageValue({\r\n        id,\r\n        damageValue: calculateDV(character, {\r\n          rawAttack,\r\n          attackPercentage,\r\n          critRate: +e.currentTarget.value,\r\n          critDamage,\r\n          elementalBonus,\r\n          physicalBonus,\r\n        }),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCritDamageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setArtifactCritDamage({ id, critDamage: +e.currentTarget.value }));\r\n    dispatch(\r\n      setDamageValue({\r\n        id,\r\n        damageValue: calculateDV(character, {\r\n          rawAttack,\r\n          attackPercentage,\r\n          critRate,\r\n          critDamage: +e.currentTarget.value,\r\n          elementalBonus,\r\n          physicalBonus,\r\n        }),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleElementalBonusChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatch(\r\n      setArtifactElementalBonus({ id, elementalBonus: +e.currentTarget.value })\r\n    );\r\n    dispatch(\r\n      setDamageValue({\r\n        id,\r\n        damageValue: calculateDV(character, {\r\n          rawAttack,\r\n          attackPercentage,\r\n          critRate,\r\n          critDamage,\r\n          elementalBonus: +e.currentTarget.value,\r\n          physicalBonus,\r\n        }),\r\n      })\r\n    );\r\n  };\r\n\r\n  const handlePhysicalBonusChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatch(\r\n      setArtifactPhysicalBonus({ id, physicalBonus: +e.currentTarget.value })\r\n    );\r\n    dispatch(\r\n      setDamageValue({\r\n        id,\r\n        damageValue: calculateDV(character, {\r\n          rawAttack,\r\n          attackPercentage,\r\n          critRate,\r\n          critDamage,\r\n          elementalBonus,\r\n          physicalBonus: +e.currentTarget.value,\r\n        }),\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.artifact}>\r\n      <Form className={styles.form} layout={\"vertical\"}>\r\n        <div className={styles.form__header}>\r\n          <Typography.Title className={styles.form__title} level={2}>\r\n            Artifact {id + 1}\r\n          </Typography.Title>\r\n          <Button\r\n            className={styles.close}\r\n            type={\"primary\"}\r\n            danger\r\n            onClick={handleDeleteButtonClick}\r\n          >\r\n            <CloseOutlined />\r\n          </Button>\r\n        </div>\r\n        <Form.Item>\r\n          <Input\r\n            type=\"number\"\r\n            prefix={<div className={styles.field__prefix}>Attack</div>}\r\n            placeholder=\"Artifact's Raw Attack\"\r\n            value={rawAttack}\r\n            onChange={handleRawAttackChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            type=\"number\"\r\n            prefix={<div className={styles.field__prefix}>Attack (%)</div>}\r\n            placeholder=\"Artifact's Attack Percentage\"\r\n            value={attackPercentage}\r\n            onChange={handleAttackPercentageChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            type=\"number\"\r\n            prefix={<div className={styles.field__prefix}>Crit Rate</div>}\r\n            placeholder=\"Artifact's Crit Rate\"\r\n            value={critRate}\r\n            onChange={handleCritRateChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            type=\"number\"\r\n            prefix={<div className={styles.field__prefix}>Crit Damage</div>}\r\n            placeholder=\"Artifact's Crit Damage\"\r\n            value={critDamage}\r\n            onChange={handleCritDamageChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            type=\"number\"\r\n            prefix={<div className={styles.field__prefix}>Elemental Bonus</div>}\r\n            placeholder=\"Artifact's Elemental Bonus\"\r\n            value={elementalBonus}\r\n            onChange={handleElementalBonusChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            type=\"number\"\r\n            prefix={<div className={styles.field__prefix}>Physical Bonus</div>}\r\n            placeholder=\"Artifact's Physical Bonus\"\r\n            value={physicalBonus}\r\n            onChange={handlePhysicalBonusChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Statistic\r\n            title={\"Damage Value\"}\r\n            value={`${(damageValue * 100).toFixed(2)}%`}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ArtifactForm);\r\n","import styles from './DamageValueCalculator.module.scss';\r\nimport { Button } from 'antd';\r\nimport CharacterForm from './CharacterForm/CharacterForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nimport { addArtifact, resetArtifacts } from '../../app/artifactsSlice';\r\nimport { DamageValueCalculatorUsage } from './DamageValueCalculatorUsage/DamageValueCalculatorUsage';\r\nimport ArtifactForm from './ArtifactForm/ArtifactForm';\r\n\r\nexport const DamageValueCalculator = () => {\r\n    const dispatch = useDispatch();\r\n    const artifacts = useSelector((state: RootState) => state.artifacts.items);\r\n\r\n    let renderedArtifacts = [];\r\n    for (let i: number = 0; i < artifacts.length; i++) {\r\n        renderedArtifacts.push(<ArtifactForm id={i} />);\r\n    }\r\n\r\n    const handleAddArtifactButtonClick = () => {\r\n        dispatch(addArtifact());\r\n    };\r\n\r\n    const handleResetArtifactsButtonClick = () => {\r\n        dispatch(resetArtifacts());\r\n    };\r\n\r\n    return (\r\n        <div className={styles.forms}>\r\n            <div className={styles.character}>\r\n                <DamageValueCalculatorUsage />\r\n                <CharacterForm />\r\n            </div>\r\n            <div className={styles.control}>\r\n                <Button type={'primary'} onClick={handleAddArtifactButtonClick}>\r\n                    Add Artifact\r\n                </Button>\r\n                <Button type={'primary'} danger onClick={handleResetArtifactsButtonClick}>\r\n                    Reset Artifacts\r\n                </Button>\r\n            </div>\r\n            <div className={styles.artifacts}>{renderedArtifacts}</div>\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect, useState } from 'react';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\nimport firebase from 'firebase';\nimport { getFirebase } from '../util/firebase';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const useAuth = (initialValue: null | firebase.User) => {\n    const [currentUser, setCurrentUser] = useState(initialValue as firebase.User | null);\n\n    useEffect(() => {\n        const firebaseInstance = getFirebase();\n        if (firebaseInstance) {\n            firebaseInstance.auth().onAuthStateChanged((authUser: firebase.User | null) => {\n                setCurrentUser(authUser ? authUser : null);\n            });\n        }\n    }, []);\n\n    return {\n        currentUser,\n        setCurrentUser,\n    };\n};\n","import styles from './SignUp.module.scss';\r\nimport { Button, Form, Input, Typography } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useAuth } from '../../../app/hooks';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../../util/firebase';\r\n\r\nexport const SignUp = () => {\r\n    const { currentUser } = useAuth(null);\r\n\r\n    const onFinish = (values: any) => {\r\n        signUp(values.email, values.password);\r\n    };\r\n\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={onFinish}>\r\n            <Typography.Title className={styles.title}>Sign Up</Typography.Title>\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[{ required: true, message: 'Please input your email!' }]}\r\n            >\r\n                <Input type={'email'} placeholder={'Email'} prefix={<UserOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n                <Input type={'password'} placeholder={'Password'} prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirmPassword\"\r\n                rules={[{ required: true, message: 'Please confirm your password!' }]}\r\n            >\r\n                <Input\r\n                    type={'password'}\r\n                    placeholder={'Confirm Password'}\r\n                    prefix={<LockOutlined />}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item className={styles.button}>\r\n                <Button type={'primary'} htmlType=\"submit\">\r\n                    Sign Up\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n","import styles from './SignIn.module.scss';\r\nimport { Button, Form, Input, Typography } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useAuth } from '../../../app/hooks';\r\nimport { signIn } from '../../../util/firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface Props {}\r\n\r\nexport const SignIn = (props: Props) => {\r\n    const { currentUser } = useAuth(null);\r\n\r\n    const onFinish = (values: any) => {\r\n        signIn(values.email, values.password);\r\n    };\r\n\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={onFinish}>\r\n            <Typography.Title className={styles.title}>Sign In</Typography.Title>\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[{ required: true, message: 'Please input your email!' }]}\r\n            >\r\n                <Input type={'email'} placeholder={'Email'} prefix={<UserOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n                <Input type={'password'} placeholder={'Password'} prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item className={styles.button}>\r\n                <Button type={'primary'} htmlType=\"submit\">\r\n                    Sign In\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst initialState = {\r\n  user: null as firebase.User | null,\r\n};\r\n\r\nexport type AuthState = typeof initialState;\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<firebase.User | null>) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser } = authSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCurrentUser = (state: RootState): firebase.User | null =>\r\n  state.auth.user;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport default authSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport type Weapon = {\r\n  name: string;\r\n  rarity: number;\r\n  level: number;\r\n  stats: {\r\n    main: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Artifact = {\r\n  name: string;\r\n  set: string | null;\r\n  stats: {\r\n    main: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Flower = Artifact & {\r\n  stats: {\r\n    main: {\r\n      type: \"HP\";\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Plume = Artifact & {\r\n  stats: {\r\n    main: {\r\n      type: \"ATK\";\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Sands = Artifact & {\r\n  stats: {\r\n    main: {\r\n      type: \"HP%\" | \"ATK%\" | \"DEF%\" | \"Elemental Mastery\" | \"Energy Recharge%\";\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Goblet = Artifact & {\r\n  stats: {\r\n    main: {\r\n      type:\r\n        | \"HP%\"\r\n        | \"ATK%\"\r\n        | \"DEF%\"\r\n        | \"Elemental Mastery\"\r\n        | \"Physical DMG Bonus%\"\r\n        | \"Pyro DMG Bonus%\"\r\n        | \"Hydro DMG Bonus%\"\r\n        | \"Electro DMG Bonus%\"\r\n        | \"Anemo DMG Bonus%\"\r\n        | \"Cryo DMG Bonus%\"\r\n        | \"Geo DMG Bonus%\";\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Circlet = Artifact & {\r\n  stats: {\r\n    main: {\r\n      type:\r\n        | \"HP%\"\r\n        | \"ATK%\"\r\n        | \"DEF%\"\r\n        | \"Elemental Mastery\"\r\n        | \"Crit Rate%\"\r\n        | \"Crit DMG%\"\r\n        | \"Healing Bonus%\";\r\n      value: number;\r\n    } | null;\r\n    sub: {\r\n      type: string;\r\n      value: number;\r\n    } | null;\r\n  };\r\n};\r\n\r\nexport type Character = {\r\n  id: number;\r\n  name: string;\r\n  level: number;\r\n  weapon: Weapon | null;\r\n  artifacts: {\r\n    flower: Flower | null;\r\n    plume: Plume | null;\r\n    sands: Sands | null;\r\n    goblet: Goblet | null;\r\n    circlet: Circlet | null;\r\n  };\r\n  constellation: number;\r\n  talents: {\r\n    normalAttack: number;\r\n    elementalSkill: number;\r\n    elementalBurst: number;\r\n  };\r\n};\r\n\r\ntype MyCharactersState = {\r\n  items: Array<Character>;\r\n};\r\n\r\nconst initialState: MyCharactersState = {\r\n  items: [],\r\n};\r\n\r\nexport const myCharactersSlice = createSlice({\r\n  name: \"myCharacters\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    addMyCharacter: (state, action: PayloadAction<Character>) => {\r\n      debugger;\r\n      state.items.push(action.payload);\r\n    },\r\n    deleteMyCharacter: (state, action: PayloadAction<Character>) => {\r\n      state.items = state.items.filter(\r\n        (character: Character) => character.id !== action.payload.id\r\n      );\r\n    },\r\n    changeMyCharacterName: (\r\n      state,\r\n      action: PayloadAction<{ id: number; name: string }>\r\n    ) => {\r\n      state.items[action.payload.id].name = action.payload.name;\r\n    },\r\n    changeMyCharacterLevel: (\r\n      state,\r\n      action: PayloadAction<{ id: number; level: number }>\r\n    ) => {\r\n      state.items[action.payload.id].level = action.payload.level;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addMyCharacter,\r\n  deleteMyCharacter,\r\n  changeMyCharacterName,\r\n  changeMyCharacterLevel,\r\n} = myCharactersSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectMyCharacters = (state: RootState): Array<Character> =>\r\n  state.myCharacters.items;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport default myCharactersSlice.reducer;\r\n","import styles from './MyCharacter.module.scss';\r\nimport React from 'react';\r\nimport {\r\n    changeMyCharacterLevel,\r\n    changeMyCharacterName,\r\n    Character,\r\n} from '../../../app/myCharactersSlice';\r\nimport { Card, Col, Grid, Input, Row, Select, Space, Statistic, Typography } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface Props {\r\n    character: Character;\r\n}\r\n\r\nexport const MyCharacter = ({ character }: Props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCharacterNameChange = (value: string) => {\r\n        dispatch(changeMyCharacterName({ id: character.id, name: value }));\r\n    };\r\n\r\n    const handleCharacterLevelChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(\r\n            changeMyCharacterLevel({\r\n                id: character.id,\r\n                level: +e.currentTarget.value,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Card title={'Character'} type={'inner'}>\r\n            <Card\r\n                className={styles.myCharacter}\r\n                style={{ width: '50vh' }}\r\n                title={<Input defaultValue={character.name} />}\r\n                type={'inner'}\r\n            >\r\n                <Card.Grid>\r\n                    <Statistic title={'Level'} value={character.level} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Constellation'} value={character.level} />\r\n                </Card.Grid>\r\n            </Card>\r\n\r\n            <Card\r\n                className={styles.myCharacter}\r\n                style={{ width: '50vh' }}\r\n                title={'Talents'}\r\n                type={'inner'}\r\n            >\r\n                <Card.Grid>\r\n                    <Statistic title={'Normal Attack'} value={character.talents.normalAttack} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Elemental Skill'} value={character.talents.elementalSkill} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Elemental Burst'} value={character.talents.elementalBurst} />\r\n                </Card.Grid>\r\n            </Card>\r\n\r\n            <Card\r\n                className={styles.myCharacter}\r\n                style={{ width: '50vh' }}\r\n                title={'Weapon'}\r\n                type={'inner'}\r\n            >\r\n                <Card.Grid>\r\n                    <Statistic title={'Name'} value={character.weapon?.name || ''} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Rarity'} value={character.weapon?.rarity} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Level'} value={character.weapon?.level} />\r\n                </Card.Grid>\r\n            </Card>\r\n\r\n            <Card\r\n                className={styles.myCharacter}\r\n                style={{ width: '50vh' }}\r\n                title={'Artifacts'}\r\n                type={'inner'}\r\n            >\r\n                <Card.Grid>\r\n                    <Statistic title={'Rarity'} value={character.weapon?.rarity} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Rarity'} value={character.weapon?.rarity} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Level'} value={character.weapon?.level} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Level'} value={character.weapon?.level} />\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                    <Statistic title={'Level'} value={character.weapon?.level} />\r\n                </Card.Grid>\r\n            </Card>\r\n        </Card>\r\n    );\r\n};\r\n","import styles from './MyCharacters.module.scss';\r\nimport { Button, Layout, Typography } from 'antd';\r\nimport { Header } from '../common/Header/Header';\r\nimport { selectCurrentUser } from '../../app/authSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMyCharacter, Character, selectMyCharacters } from '../../app/myCharactersSlice';\r\nimport { MyCharacter } from './MyCharacter/MyCharacter';\r\n\r\ninterface Props {}\r\n\r\nexport const MyCharacters = (props: Props) => {\r\n    const currentUser = useSelector(selectCurrentUser);\r\n    const myCharacters = useSelector(selectMyCharacters);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddCharacterButtonClick = () => {\r\n        const newCharacter: Character = {\r\n            id:\r\n                myCharacters && myCharacters.length > 0\r\n                    ? myCharacters[myCharacters.length - 1].id + 1\r\n                    : 0,\r\n            name: '',\r\n            level: 0,\r\n            weapon: {\r\n                name: '',\r\n                rarity: 5,\r\n                level: 0,\r\n                stats: {\r\n                    main: {\r\n                        type: '',\r\n                        value: 0,\r\n                    },\r\n                    sub: {\r\n                        type: '',\r\n                        value: 0,\r\n                    },\r\n                },\r\n            },\r\n            artifacts: {\r\n                flower: {\r\n                    name: '',\r\n                    set: '',\r\n                    stats: {\r\n                        main: {\r\n                            type: 'HP',\r\n                            value: 0,\r\n                        },\r\n                        sub: {\r\n                            type: '',\r\n                            value: 0,\r\n                        },\r\n                    },\r\n                },\r\n                plume: {\r\n                    name: '',\r\n                    set: '',\r\n                    stats: {\r\n                        main: {\r\n                            type: 'ATK',\r\n                            value: 0,\r\n                        },\r\n                        sub: {\r\n                            type: '',\r\n                            value: 0,\r\n                        },\r\n                    },\r\n                },\r\n                sands: {\r\n                    name: '',\r\n                    set: '',\r\n                    stats: {\r\n                        main: {\r\n                            type: 'HP%',\r\n                            value: 0,\r\n                        },\r\n                        sub: {\r\n                            type: 'HP%',\r\n                            value: 0,\r\n                        },\r\n                    },\r\n                },\r\n                goblet: {\r\n                    name: '',\r\n                    set: '',\r\n                    stats: {\r\n                        main: {\r\n                            type: 'HP%',\r\n                            value: 0,\r\n                        },\r\n                        sub: {\r\n                            type: 'HP%',\r\n                            value: 0,\r\n                        },\r\n                    },\r\n                },\r\n                circlet: {\r\n                    name: '',\r\n                    set: '',\r\n                    stats: {\r\n                        main: {\r\n                            type: 'HP%',\r\n                            value: 0,\r\n                        },\r\n                        sub: {\r\n                            type: 'HP%',\r\n                            value: 0,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            constellation: 0,\r\n            talents: {\r\n                normalAttack: 0,\r\n                elementalSkill: 0,\r\n                elementalBurst: 0,\r\n            },\r\n        };\r\n        dispatch(addMyCharacter(newCharacter));\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return (\r\n            <div>\r\n                <Typography.Title>My Characters</Typography.Title>\r\n                <Typography.Paragraph className={styles.text}>\r\n                    You should sign in to store your characters\r\n                </Typography.Paragraph>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title className={styles.title}>\r\n                <span className={styles.title__text}>My Characters</span>\r\n            </Typography.Title>\r\n            <div className={styles.characters}>\r\n                <div className={styles.characters__button}>\r\n                    <Button type={'primary'} onClick={handleAddCharacterButtonClick}>\r\n                        Add Character\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.charactersList}>\r\n                    {myCharacters.length > 0\r\n                        ? myCharacters.map((character) => <MyCharacter character={character} />)\r\n                        : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import styles from \"./SideBar.module.scss\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\n\r\ntype Item = {\r\n  id: number;\r\n  name: string;\r\n  link?: string;\r\n  items?: Array<Item>;\r\n};\r\n\r\ninterface Props {\r\n  items?: Array<Item>;\r\n}\r\n\r\nexport const SideBar = ({ items }: Props) => {\r\n  return (\r\n    <Layout.Sider theme=\"dark\">\r\n      <Link to={\"/\"}>\r\n        <div className={styles.logo}>\r\n          <div className={styles.logo__text}>Minna Genshin</div>\r\n        </div>\r\n      </Link>\r\n      <Menu defaultSelectedKeys={[\"0\"]} theme=\"dark\">\r\n        {items?.map((i: Item) => (\r\n          <Menu.Item key={i.name}>\r\n            <CaretRightOutlined />{\" \"}\r\n            {i.link ? <Link to={i.link}>{i.name}</Link> : i.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    </Layout.Sider>\r\n  );\r\n};\r\n","import styles from \"./Header.module.scss\";\r\nimport { Button, Layout } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signOut } from \"../../../util/firebase\";\r\nimport { selectCurrentUser } from \"../../../app/authSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface Props {\r\n  title?: string;\r\n}\r\n\r\nexport const Header = ({ title }: Props) => {\r\n  const currentUser = useSelector(selectCurrentUser);\r\n\r\n  const handleSignOutButtonClick = () => {\r\n    signOut();\r\n  };\r\n\r\n  return (\r\n    <Layout.Header className={styles.header}>\r\n      <div className={styles.title}>\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className={styles.account}>\r\n        {currentUser ? (\r\n          <Button danger type={\"primary\"} onClick={handleSignOutButtonClick}>\r\n            Sign Out\r\n          </Button>\r\n        ) : (\r\n          <div className={styles.buttons}>\r\n            <NavLink to={\"/sign-in\"}>\r\n              <Button>Sign In</Button>\r\n            </NavLink>\r\n            <NavLink to={\"/sign-up\"}>\r\n              <Button type={\"primary\"}>Sign Up</Button>\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout.Header>\r\n  );\r\n};\r\n","import styles from './PageLayout.module.scss';\r\nimport { Layout } from 'antd';\r\nimport React from 'react';\r\nimport { SideBar } from '../SideBar/SideBar';\r\nimport { Header } from '../Header/Header';\r\n\r\ntype Page = {\r\n    id: number;\r\n    name: string;\r\n    link?: string;\r\n    pages?: Array<Page>;\r\n};\r\n\r\ninterface Props {\r\n    children?: React.ReactNode;\r\n    pages?: Array<Page>;\r\n}\r\n\r\nexport const PageLayout = ({ children, pages }: Props) => {\r\n    return (\r\n        <Layout className={styles.page}>\r\n            <SideBar items={pages} />\r\n            <Layout>\r\n                <Header title={'My Characters'} />\r\n                <Layout.Content className={styles.content}>\r\n                    <div className={styles.main}>{children}</div>\r\n                </Layout.Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n","import styles from './App.module.scss';\nimport { Layout } from 'antd';\nimport { SideBar } from './components/common/SideBar/SideBar';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home } from './components/Home/Home';\nimport { Footer } from './components/common/Footer/Footer';\nimport { DamageValueCalculator } from './components/DamageValueCalculator/DamageValueCalculator';\nimport { SignUp } from './components/authentification/SignUp/SignUp';\nimport { SignIn } from './components/authentification/SignIn/SignIn';\nimport { useAuth } from './app/hooks';\nimport { useEffect } from 'react';\nimport { MyCharacters } from './components/MyCharacters/MyCharacters';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from './app/authSlice';\nimport firebase from 'firebase';\nimport { PageLayout } from './components/common/PageLayout/PageLayout';\n\nfunction App() {\n    const pages = [\n        { id: 0, name: 'Home', link: '/' },\n        { id: 1, name: 'DV Calculator', link: '/dv' },\n        { id: 2, name: 'My Characters', link: '/my-characters' },\n    ];\n\n    const { currentUser } = useAuth(null as firebase.User | null);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setUser(currentUser));\n    }, [currentUser, dispatch]);\n\n    return (\n        <PageLayout pages={pages}>\n            <Switch>\n                <Route path={'/my-characters'} component={MyCharacters} />\n                <Route exact path={'/dv'}>\n                    <DamageValueCalculator />\n                </Route>\n                <Route exact path={'/'}>\n                    <Home />\n                </Route>\n                <Route exact path={'/sign-in'}>\n                    <SignIn />\n                </Route>\n                <Route exact path={'/sign-up'}>\n                    <SignUp />\n                </Route>\n            </Switch>\n        </PageLayout>\n    );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport characterReducer from \"./characterSlice\";\nimport artifactsReducer from \"./artifactsSlice\";\nimport authReducer from \"./authSlice\";\nimport myCharactersReducer from \"./myCharactersSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    character: characterReducer,\n    artifacts: artifactsReducer,\n    auth: authReducer,\n    myCharacters: myCharactersReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"artifact\":\"ArtifactForm_artifact__1ZGSX\",\"form\":\"ArtifactForm_form__3lcEP\",\"form__header\":\"ArtifactForm_form__header__2-oFi\",\"form__title\":\"ArtifactForm_form__title__y9AMV\",\"form__close\":\"ArtifactForm_form__close__P10Wa\",\"field__prefix\":\"ArtifactForm_field__prefix__y9aOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"CharacterForm_character__2ehc7\",\"form\":\"CharacterForm_form__2KknU\",\"form__title\":\"CharacterForm_form__title__3SNh2\",\"field__prefix\":\"CharacterForm_field__prefix__1MTN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyCharacters_title__zg7rl\",\"text\":\"MyCharacters_text__2XS5t\",\"characters\":\"MyCharacters_characters__3lmou\",\"characters__button\":\"MyCharacters_characters__button__3Fpp8\",\"charactersList\":\"MyCharacters_charactersList__hXi2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DamageValueCalculator_content__2B8s4\",\"main\":\"DamageValueCalculator_main__1b-tk\",\"control\":\"DamageValueCalculator_control__2mQBW\",\"forms\":\"DamageValueCalculator_forms__ja4mo\",\"character\":\"DamageValueCalculator_character__2PYzK\",\"artifacts\":\"DamageValueCalculator_artifacts__1DeyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__YfN4U\",\"title\":\"Header_title__2smQ8\",\"account\":\"Header_account__2HCzg\",\"buttons\":\"Header_buttons__3C7Ew\"};"],"sourceRoot":""}